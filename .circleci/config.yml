version: 2.1

workflows:
  version: 2.1
  build:
    jobs:
      - main-job

jobs:
  main-job:
    executor: main-exec
    steps:
      - checkout
      - configure-system
      - run: sudo pip3 install git+https://github.com/informatics-isi-edu/webpy.git
      - install-webauthn
      - install-hatrac
      - install-ermrest
      # - install-nodejs
      - install-ermrest-data-utils
      - install-ermrestjs
      - install-chaise
      - run-tests

executors:
  main-exec:
    docker:
      - image: circleci/node:7.10.1
      - image: circleci/postgres:10
    # machine:
    #   image: ubuntu-1604:202010-01
    environment:
      COOKIES: ~/cookies
      VERBOSE: brief
      HTTPD_ERROR_LOG: /var/log/apache2/error.log
      CHAISE_BASE_URL: http://localhost/chaise
      ERMREST_URL: http://localhost/ermrest
      SHARDING: "true"

commands:
  configure-system:
    steps:
      - run: 
          name: Initalize
          command: |
            lsb_release -a || true
            export TZ=America/Los_Angeles
            export PATH="$(systemd-path user-binaries):$PATH"
      - run:
          name: Install postgresql-10
          command: |
            sudo service postgresql start 10 || true
          # sudo apt-get -y purge postgresql-9.1 postgresql-9.2 postgresql-9.3 postgresql-9.4 postgresql-9.5 postgresql-9.6 || true
          #   wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          #   sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -sc)-pgdg main" > /etc/apt/sources.list.d/PostgreSQL.list'
          #   sudo apt-get -y update
          #   sudo apt-get install postgresql-10
      - run:
          name: Install apache
          command: |
            sudo apt-get install apache2 libapache2-mod-wsgi
            sudo ln -s /etc/apache2/conf-enabled /etc/apache2/conf.d
            sudo a2enmod ssl
            sudo a2ensite default-ssl
            sudo groupadd -o -g $(id -g www-data) apache 
      - run:
          name: Setup python
          command: |
            sudo apt-get install python3-pip
            sudo su -c 'echo /usr/lib/python3.5/site-packages > /usr/local/lib/python3.5/dist-packages/sys-site-packages.pth'
            sudo su -c 'python3 -c "import site;print(site.PREFIXES);"'
            sudo su -c 'python3 -c "import site;print(site.getsitepackages())"'
            sudo pip3 install requests
            sudo pip3 install psycopg2-binary
  install-webpy:
    steps:
      - run: 
          name: Install webpy
          command: |
            git clone https://github.com/informatics-isi-edu/webpy.git
            cd webpy
            sudo python3 setup.py install
            cd ..
      # - run: sudo pip3 install git+https://github.com/informatics-isi-edu/webpy.git
  install-webauthn:
    steps:
      - run:
          name: Installing webauthn
          command: |
            sudo useradd -m -r webauthn
            sudo su -c '/usr/bin/python3 -c "import sys;import pprint;pprint.pprint(sys.path)"' - webauthn
            cd ..
            git clone https://github.com/informatics-isi-edu/webauthn.git
            cd webauthn
            sudo make testvars
            sudo make install
            sudo make deploy
            sudo bash ./test/ubuntu-travis-setup.sh
            sudo a2enmod webauthn
            sudo service apache2 restart
            cd ..
  install-hatrac:
    steps:
      - run:
          name: Install hatrac
          command: |
              git clone https://github.com/informatics-isi-edu/hatrac.git
              cd hatrac
              sudo python3 ./setup.py install
              sudo useradd -m -r hatrac
              sudo -H -u postgres createuser -d hatrac
              sudo -H -u postgres psql -c "GRANT webauthn TO hatrac"
              sudo -H -u hatrac createdb hatrac
              sudo cp test/hatrac_config.json ~hatrac/
              sudo -H -u hatrac hatrac-deploy admin
              sudo su -c 'python3 -c "import hatrac as m;m.sample_httpd_config()"' - hatrac > ../wsgi_hatrac.conf
              sudo cp ../wsgi_hatrac.conf /etc/apache2/conf.d/wsgi_hatrac.conf
              sudo mkdir /var/www/hatrac
              sudo chown hatrac /var/www/hatrac
              cd ..
  install-ermrest:
    steps:
      - run:
          name: Install ermrest
          command: |
              git clone https://github.com/informatics-isi-edu/ermrest.git
              cd ermrest
              sudo -H make install PLATFORM=ubuntu1604
              sudo which ermrest-deploy
              sudo -H make deploy PLATFORM=ubuntu1604
              cd ..
  install-nodejs:
    steps:
      - run:
          name: Install nodejs
          command: |
              curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
              sudo apt-get install -y nodejs
  install-ermrest-data-utils:
    steps:
      - run:
          name: Install nodejs
          command: |
              git clone https://github.com/informatics-isi-edu/ErmrestDataUtils.git
              cd ErmrestDataUtils
              sudo npm install
              cd ..
  install-ermrestjs:
    steps:
      - run:
          name: Install ermrestjs
          command: |
              git clone https://github.com/informatics-isi-edu/ermrestjs.git
              cd ermrestjs
              sudo make install
              cd ../chaise
              sudo cp test/ermrest_config.json /home/ermrest/
              sudo chmod a+r /home/ermrest/ermrest_config.json
  install-chaise:
    steps:
      - run:
          name: Install chaise
          command: sudo npm install
  run-tests:
    steps:
      - run: make testfullfeaturesconfirmation
      # - run: make testdefaultconfig
      # - run: make testfullfeatures
      # - run: make testdeleteprohibited
